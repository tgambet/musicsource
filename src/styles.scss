// Custom Theming for Angular Material
@use "@angular/material" as mat;
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$musicsource-primary: mat-palette($mat-indigo);
//$musicsource-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
//$musicsource-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
//$musicsource-theme: mat-dark-theme((
//  color: (
//    primary: $musicsource-primary,
//    accent: $musicsource-accent,
//    warn: $musicsource-warn,
//  )
//));

$red: (
  50: #ffebee,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: #f44336,
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  A100: #ff8a80,
  A200: #ff5252,
  A400: #ff1744,
  A700: #ff0000,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  ),
);

$musicsource-theme: (
  primary: mat.define-palette($red, A700),
  accent: mat.define-palette(mat.$grey-palette, 200),
  warn: mat.define-palette(mat.$deep-orange-palette, A200),
  is-dark: true,
  foreground: mat.$dark-theme-foreground-palette,
  background: (
    status-bar: black,
    app-bar: map_get(mat.$grey-palette, 900),
    background: black,
    hover: rgba(white, 0.04),
    card: #333,
    dialog: map_get(mat.$grey-palette, 900),
    disabled-button: rgba(white, 0.12),
    raised-button: map-get(mat.$grey-palette, 800),
    focused-button: rgba(white, 0.12),
    selected-button: map_get(mat.$grey-palette, 900),
    selected-disabled-button: map_get(mat.$grey-palette, 800),
    disabled-button-toggle: black,
    unselected-chip: map_get(mat.$grey-palette, 700),
    disabled-list-option: black,
    tooltip: map_get(mat.$grey-palette, 700),
  ),
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// TODO
@include mat.all-component-themes($musicsource-theme);

/* You can add global styles to this file, and also import other style files */

// Fonts

/* roboto-300 - latin */
@font-face {
  font-family: "YT Sans";
  font-style: normal;
  font-weight: 700;
  src: local("YouTube Sans"),
    url("/assets/fonts/youtube-sans-bold.ttf") format("truetype");
  font-display: block;
}

/* roboto-300 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 300;
  src: local("Roboto Light"), local("Roboto-Light"),
    url("/assets/fonts/roboto-v19-latin-300.woff2") format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/roboto-v19-latin-300.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  font-display: swap;
}

/* roboto-regular - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"), local("Roboto-Regular"),
    url("/assets/fonts/roboto-v19-latin-regular.woff2") format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/roboto-v19-latin-regular.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  font-display: swap;
}

/* roboto-500 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 500;
  src: local("Roboto Medium"), local("Roboto-Medium"),
    url("/assets/fonts/roboto-v19-latin-500.woff2") format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/roboto-v19-latin-500.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  font-display: swap;
}

/* roboto-700 - latin */
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 700;
  src: local("Roboto Bold"), local("Roboto-Bold"),
    url("/assets/fonts/roboto-v19-latin-700.woff2") format("woff2"),
    /* Chrome 26+, Opera 23+, Firefox 39+ */
      url("/assets/fonts/roboto-v19-latin-700.woff") format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  font-display: swap;
}

$text-color: mat.get-color-from-palette(
  map-get($musicsource-theme, foreground),
  text
);
$background-color: mat.get-color-from-palette(
  map-get($musicsource-theme, background),
  background
);

html {
  // scroll-behavior: smooth;
  overflow-x: hidden;
  overflow-y: scroll;
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  color: $text-color;
  background-color: $background-color;
  min-height: 100%;
  display: flex;
}
p {
  margin: 0;
}
a,
a:visited {
  color: inherit;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

.settings .mat-dialog-container,
.scan-dialog .mat-dialog-container {
  padding: 0 !important;
}

.playlists-dialog .mat-dialog-container {
  padding-bottom: 0 !important;
}

app-player > .mat-slider .mat-slider-wrapper {
  top: 15px;
  right: 0;
  left: 0;
}

app-player > .mat-slider-horizontal .mat-slider-thumb {
  cursor: pointer !important;
}

app-player > .mat-slider.back .mat-slider-thumb-container {
  display: none;
}

app-player > .mat-slider.front .mat-slider-track-wrapper,
app-player > .mat-slider.front .mat-slider-track-background,
app-player > .mat-slider.front .mat-slider-track-fill {
  height: 4px;
}

app-player > .mat-slider.front .mat-slider-track-background {
  background-color: #4c4c4c;
}

app-player > .mat-slider.back .mat-slider-track-background {
  transform: translateX(0) scale(1) !important;
}

app-player .mat-slider:not(.mat-slider-sliding).cdk-focused .mat-slider-thumb {
  transform: scale(0.7);
}

*::-webkit-scrollbar {
  width: 12px;
  height: 12px;
  box-sizing: border-box;
}
*::-webkit-scrollbar-track {
  background-color: #181818;
  border-left: 1px solid rgba(255, 255, 255, 0.1);
  box-sizing: border-box;
}
*::-webkit-scrollbar-thumb {
  min-height: 50px; // TODO

  background-color: mat.get-color-from-palette(
    map-get($musicsource-theme, foreground),
    disabled-button
  );
}
*::-webkit-scrollbar-button {
  display: none;
}

[style*="--aspect-ratio"] > :first-child {
  width: 100%;
}
[style*="--aspect-ratio"] > img {
  height: auto !important;
}
@supports (--custom: property) {
  [style*="--aspect-ratio"] {
    position: relative;
  }
  [style*="--aspect-ratio"]::before {
    content: "";
    display: block;
    padding-bottom: calc(100% / (var(--aspect-ratio)));
  }
  [style*="--aspect-ratio"] > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }
}

.snack {
  color: $text-color;
  background-color: #212121;
  position: absolute;
  bottom: 0;
  left: 0;
}

.snack-top {
  color: $text-color;
  background-color: #212121;
  position: absolute;
  bottom: 0;
  left: 0;
  margin-bottom: 88px !important;
  margin-left: 16px !important;
}

.scan-overlay {
  transition: margin-bottom ease 300ms;
}
